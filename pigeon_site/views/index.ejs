<% include header.ejs %>
<div id="content">
<div class="jumbotron">
<div class="container">
<p><br>
pigeon is 
<em>an open source Internet of Things Cloud Platform.</em>
</p>
<p>it contains developer_portal, device_portal, user_portal, dev_controller, gwagent etc, you can build an IoT Cloud Platform by them</p>
</div>
</div>
<div class="container">
<div class="pull-right hidden-xs hidden-sm">
<img src="/images/components.png" width="512" height="512" style="margin-top: -32px; margin-right: -36px;">
</div>
<p>Pigeon is an IoT Cloud Platform, you can connect devices to the cloud, and they can interact with each other (IoT IFTTT), you can also manage and control them by web and mobile app throuh the internet wherever you are, data generated by devices can be collected, processed, analysised, you can keep track of devices status by them.</p>

<h2>Features</h2>
<h3>Design</h3>
<ul>
<li>pigeon as an IoT Platform, it needs provides many services, using Microservice architecture make it more scalable and more available against Monolithic, also let pigeon can easily take advantage of diffrent framework, programming languages, etc.</li>
<li>support devices with diffrent transports(like wifi, Ethernet, zigbee etc) connecting pigeon by gwagent if gwagent-carrier own corresponding abilities.</li>
<li>exposes  REST API for 3rd parties to create and manage devices on pigeon by device_portal.</li>
</ul>
<h3>Microservices</h3>
<p> pigeon consists of some microservices: user_portal. developer_portal, device_portal, dev_controller, mqtt_broker etc. each microservices can be developed with different technology stack(like nodejs, C/C++, zeromq, java, etc).</p>
<h3>Docker</h3>
<p>I will make docker for pigeon microservices, then guys can easily build pigeon by oneself.</p>
<h2>introduction to Pigeon Microservices</h2>
<div class="row" aligin="center">
<!--  <div class="col-sm-6 col-md-4">-->
<div class="col-lg-6">
<div class="thumbnail">
<img src="/images/user-group-icon.png" width="256" height="256" alt="user_portal">
<div class="caption">
<a href="http://userportal.athenacloud.net" target="_blank"><h3>User Portal</h3></a>
<p>User Portal is an  IoT cloud service, one of components of pigeon which is an open source Internet of Things Platform.<br>
You can register and bind your gateway(devices) to pigeon, then control your devices and view data from your devices. 
</p>
</div>
</div>
</div>

<!--  <div class="col-sm-6 col-md-4"> -->
<div class="col-lg-6">
<div class="thumbnail">
<img src="/images/development-icon.png" width="256" height="256" alt="developer_portal">
<div class="caption">
<a href="http://developerportal.athenacloud.net" target="_blank"><h3>Developer Portal</h3></a>
<p>Developer Portal is an  IoT cloud service for developers, one of components of pigeon which is an open source Internet of Things Platform.<br>
And it provides REST APIs for creating and managing device type. 
<br>
<br>
</p>
</div>
</div>
</div>

</div>

<div class="row featurette">
<div class="col-sm-4">
<img class="featurette-image img-responsive center-block" src="images/broker.png" alt="Generic placeholder image 1">
</div>

<div class="col-sm-8">
<h3>Mqtt_broker</h3>
<p>Pigeon uses <a href="http://www.mosquitto.org/" target="_blank">Mosquitto</a> which is an open source message broker that implements the MQ Telemetry Transport protocol(mqtt) as Mqtt_broker, also uses <a href="https://github.com/jpmens/mosquitto-auth-plug" target="_blank">mosquitto-auth-plug</a> as Authentication plugin for Mosquitto, it supports multiple back-ends (MySQL, Redis, CDB, SQLite3).</p>
</div>

<div class="col-sm-8">
<h3>ZooKeeper</h3>
<p>when pigeon grow up, both user_portal and dev_controller can become service cluster, it is better that introduce <a href="https://zookeeper.apache.org/" target="_blank">ZooKeeper(as a high-performance coordination service for distributed applications)</a> for coordination and load balance, brokerless etc, besides, ZooKeeper can be also used for all pigeon microservices.</p>
</div>
</div>
<div class="row featurette">
<div class="col-sm-4">
<img class="featurette-image img-responsive center-block" src="images/services-icon.png" alt="Generic placeholder image 1">
</div>
<div class="col-sm-8">
<h3>dev_controller</h3>
<p>it receives messages from user_portal, and check if message valid(eg user's permittion to devices, valid properties of devices etc), then send device commands to next service Mqtt_broker, also send response of device commands back to user_portal.</p>
</div>


<div class="col-sm-8">
<h3>gwagent</h3>
<p>gwagent is an agent of devices connected to Pigeon, support wifi, bluetooth, ethernet, zigbee etc, whatever transports your devices support, you only need implementing plugins of your devices on gwagent, it would dispatch messages of pigeon to corresponding device, and gather response and data of devices, forward to pigeon.</p>
</div>

<div class="col-sm-8">
<h3>device_portal</h3>
<p>as device plugins's repository, it accepts request of gwagents for device plugins, meta file etc, and device instances register into Pigeon through it.</p>
</div>
</div>
</div>
<% include footer.ejs %>
